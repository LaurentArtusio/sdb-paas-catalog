version: '2'
services:

  nginx-proxy-conf:
    image: rancher/nginx-conf:v0.2.0
    command: "-backend=rancher --prefix=/2015-07-25"

  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    container_name: elasticsearch1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1000000000
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    labels:
      io.rancher.scheduler.affinity:host_label: hostlabel=${elastic-node-1-label}

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1000000000
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    links:
      - elasticsearch1
    labels:
      io.rancher.scheduler.affinity:host_label: hostlabel=${elastic-node-2-label}

  kibana5:
    restart: always
    tty: true
    image: kibana:5.3.0
    network_mode: "container:nginx-proxy"
    stdin_open: true
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch1:9200"
    links:
      - elasticsearch1

  nginx-proxy:
    image: rancher/nginx:v1.9.4-3
    volumes_from:
      - nginx-proxy-conf
    labels:
      io.rancher.sidekicks: nginx-proxy-conf,kibana5
    links:
      - kibana5

  kibana-vip:
    ports:
      - "${public_port}:80"
    restart: always
    tty: true
    image: rancher/load-balancer-service
    links:
      - nginx-proxy
    stdin_open: true

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local

